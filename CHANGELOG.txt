Known bugs
==========
- any OS: high GUI window sometimes crashes. workaround: use "cv2.destroyAllWindows()", or restart kernel
- on macOS, the high throughput workflow crashes when watchdog and opencv interact ("segmentation fault")

3.4.0
-----
- new function: preprocesing.detect_QRcode; will find and read out a QR code that is contained inside an image, with the option to enter code manually if detection fails. visualized with visualization.draw_QRcode
- improved "check_files" method for "project" class; allows to relink files to a new folder
- minor fixes related to console feedback    
- bugs in documentation fixed (dead links in tutorials)

3.3.6
-----
- "edit_contours" now has the function to change the target contour directly when using the "Pype": the option "inplace: True" will return the edited contour to be used throughout the current pype run, but not overwrite it in the saved annotations file. for that, a successive "detect_contours" needs to be run
- added more options to select what gets added to the archive when exporting a project with "export_zip"
- added more options for "save_ROI", e.g., to export image crops with a white background
- added more docstrings for functions to autogenerate API

3.3.5
-----
bugfix:
	- polyline wouldn't finish with CTRL when only two points are selected
- "show_nodes=true" argument for all polygon-related visualization tools (polygon mask, rectangle mask, polyline)
- now possible to export polyline and reference annotation to csv
- new "match_against" argument in "core.segmentation.detect_contours": contours must be inside existing mask or contour
- new "binary_mask" argument in "plugins.segmentation.detect_object": mask out background to help detection algorithms

3.3.4
-----
bugfix:
	- removed "zoom memory" when running Pype, as this wasn't working properly
	- Project.check_files() now also accounts for missing filenames in the project attributes file
- "show_nodes=true" argument for all polygon-related measurement tools (polygon mask, rectangle mask, polyline)


3.3.3
-----
- new function: class method project.check_files; will all project files for completeness by comparing the images in the
        "data" folder to the file list the project attributes. Will attempt to
        fix discrepancies, but ask for feedback first.
- project class method add_files now takes n_max argument, to limit the amount of images being added to the project

3.3.2
-----
bugfix:
	- skip=True in pype now works with any produced annotation or canvas file (or specified annotation, e.g. skip="contours")
	- polyline would be converted to polygon
	- internal feedback argument would be accidentally included in pype config

3.3.1
-----
bugfix:
	- plugin imports not working
	- added manifest to include assets folder with html color overview

3.3.0
-----
bugfix:
	- added "gray" option back to select_canvas
- images added to the project with "copy" or "mod" mode will, by default, keep their file ending. there is also a new resizing option for mod, which will downsize the images to the specified "resize_max_dim" while maintaining aspect ratio
new functionality:
	- plugins! phenopype can now check for external packages and, if available, load functions that utilize them. currently, this includes "phenomorph" for automatic landmark detection (using a dlib backend), and keras (using a tensorflow backend) for deep learning based segmentation. if the packages are not installed to the same python environment as phenopype they simply wont work (with a warning).
- option "visualize" for the Pype class is now "autoshow" and can be used independently from "feedback"
- new function: pp.print_colours() will show the names from W3 colour palette that can be used for all functions accepting colour arguments as strings

3.2.3
-----
bugfix:
	- training data exported for "ml-morph" framework wasn't formatted correctly
- new training data export for convolutional neural networks in keras (using "keras-cnn-semantic")

3.2.2
-----
bugfix:
	- when selecting canvas or channel, b/g/r were sliced incorrectly!

3.2.1
-----
bugfix:
	- when specifying multiple masks in the detection settings they were overwritten (also updated tutorial 7 and gallery proj. 4)

3.2.0
-----
bugfix:
	- adding image files in "link" mode to a projet will now use relative links instead of absolute
new functionality:
	- project.create_training_data(): exports a set of annotations that can be used for training machine learning models. The method extracts a specific set of annotations from the entire project (for a specified tag) and formats them in a specific way so that the data can be immediately processed by a given architecture or framework. The first implementation is for "ml-morph" (https://github.com/agporto/ml-morph / Machine-learning tools for landmark-based morphometrics), a Python toolchain for automatic landmark detection in images.

3.1.0
-----
bugfix:
	- detect_mask (formerly detect_shape) would return faulty masks
	- remove debug markers ("test", "bier", etc.)
new functionality:
	- project.export_zip(): compress the current project and store as a zip archive to the root folder (option to exclude imgs)
- detect_shape becomes detect_mask
- more legacy conversion added (function names in Pype config files will be automatically renamed to new syntax)

3.0.2
-----
- removed numpy/pandas version selection in setup.py to reduce conflicts with other packages and environments
- zooming during Pype has now memory: it will keep the last zoomed in area focused (except the final inspection window)

3.0.1
-----
- edit_contour is now directly applied to binary image when used in Pype (accumulative)
- improved pype name check

3.0.0
-----
new major release - breaks all existing versions

too extensive to document completely, but in a nutshell:
- we now have annotation functions which save image annotations (contours, drawings, data) to a dict (internally) and are saved as json
- GREATLY reduced boilerplate code allowing more flexibility when introducing new functions (for developers and contributors)
- better code annotation and more settings
- templates externalized
- all new docs!!

--------------------------------------------------------------------------------------------

2.0.1
-----
bugfix:
	- save_masks as df would take ndarray instead of DataFrame
	- select_canvas with ndarray would not allow to select raw
- draw_landmarks now takes label=False/True and offset argument

2.0.0
-----
changes that are INCOMPATIBLE with past versions:
	- configuration templates (previously "presets") are now stores as YAML in their own folder "template"
	- yaml syntax for config has changed: modules are denoted as list items for greater flexibility when using a single step multiple times
	- "scale"-functions is called "reference" (to reflect both a reference to size and colour)
	- reference information is now stored centrally in the project attributes file, image attributes file now contain pointers that can be "activated" (to use multiple references)
- phenopype readme and tutorials have been reorganized
- project.edit_config now takes triple-quote docstring to find and replace text in all configuration files belonging to a project

--------------------------------------------------------------------------------------------

1.0.9
-----
bugfix:
    - last scroll while zoom out scrambles the shown canvas
	- draw/mask in edit mode: indexing issues that would remove previously created drawings or masks
	- remove duplicate mask coordinate feedback
- added docstrings for texture features
- reworked yaml-parser: now also duplicate "steps" (segmentation, visualization, etc.) possible
- pype: finish now with CTRL+ENTER, otherwise the pype-operation starts over
- create_mask and draw have new mode (edit): allows to pick up on previous work and add or remove masks and drawings
- draw: print all drawings in the same function, for previewing
- draw/mask: "canvas" option to draw directly onto current canvas (and on underlying binary mask)


1.0.8
-----
bugfix:
	- create mask in edit mode would edit all masks (not just the one with the selected label)
	- pypi readme markdown formatting
- rewritten create_mask function to match drawing

1.0.7
-----
bugfix:
	- create_scale in interactive template mode did not get saved
	- fixed raw.file in proj. lists issue
- draw_contours now accepts previously run contour-files via "compare" argument
- create_mask window now has the same size as pype-window
- create_ mask and draw now have edit mode: add and modify previous runs


1.0.6
-----
bugfix:
	- tutorial 2: NoneType error when drawing contours under low throughput (fixes https://github.com/mluerig/phenopype/issues/7)
	- tutorial 5: unexpected keyword when drawing polylines (fixes https://github.com/mluerig/phenopype/issues/8)
	- presets to all examples added
- new feature in measurement module: texture_features calculates 93 texture features (using pyradiomics as dependency)
- example 8 added

1.0.5
-----
bugfix:
	- data_dir on project load
- new feature in measurement module: shape_features calculates 41 shape features
- example 3 added

1.0.4
-----
- new feature in measurement module: colour_intensity can now also measure the background of detected objects
- automated testing and CI implemented
- collect_results project method implemented
- all tutorials online, most examples online

1.0.3
-----
- renamed visualization functions to "draw_"-prefix to indicate that they are actually modifying the canvas (e.g. "show_contours" is now "draw_contours")
- "dirpath" option added to container (at initialization and saving)
- unified measurement and visualization arguments (e.g. "text_size" now is "label_size" and "label_col" now is "label_colour")
- skeletonization procedure implemented
- watershed algorithm implemented
- fix mask application in threshold
- create scale has now a mask function distinct of the template argument
- examples 1 and 2 added
- testing coverage ~ 60 %

1.0.2
-----
bugfix:
	- pype: check if container has image or is NoneType
- Tutorials 1 + 2 improved
- Example 2 added (low throughput
- Docstrings to main, utils and preprocessing added

1.0.1
------
bugfix:
	- if resize==1, load_images will pass none to pype
- Tutorial 1 (Python intro) and Tutorial 2 (Phenopype workflow) added
- added update and development to installation doc

1.0.0
------
new major release - breaks all existing versions

--------------------------------------------------------------------------------------------



0.10.0
------
bugfix:
- add_files with multiple ex- or include argument created duplicated filelists


0.9.0
------
- New feature: scale (former scale_maker) can now automatically equalize histograms via interpolation. Was mostly inspired by this SO question: https://stackoverflow.com/questions/32655686/histogram-matching-of-two-images-in-python-2-x
- renamed "scale_maker" method to "scale", and subfunctions, too. tutorials updated. more name changes to come towards a more intuitive naming convention
- show_img can now show multiple images when list is provided
-

0.8.0
------
- scale_maker is completely reworked: now has zoom and onscreen notifications for mm/pixel info. measuring scale and making a template for detection are now two separate functions (measure_scale and make_scale_template)
- documentation and API reference for tracking module added
- test for scale added

0.7.2
------
- landmark_maker has now (limited) mousewheel zooming functionality
- changed instructions for phenopype installation: make virtual env in conda for better package control (e.g. avoid different opencv versions)

0.7.1
------
bugfix:
- "filename not found" when no objects were found

0.7.0
------
- full landmark functionality added (refer to "landmark_maker" readme in the docs)
- additionally: measure length of curvy specimens from within the landmarking function ("arc")
- generic image registration (aka feature recognition) added, will be properly introduced and documented in the next version


0.6.1
------
- "scale_maker" can return now has attribute "mask_obj" to pass on to "object_finder" (tuple of 3)
bugfix:
- missing "filetypes" argument in "project_finder" help
- default value for "factor in "scale.detect"


0.6.0
------
- integration with opencv-contrib-python==3.4.5.20
- tracking functionality added, integration with trackpy
- testing environment in place, integration with pytest
- initialize classes directly with image
- tutorials included for basic python (1) and object finding (2)
Known bugs:
- base "fillyPoly" sometimes breaks - culprit numpy datatype?
- base.polygon_maker "include=False" excludes everything


0.5.1
------
- functions take numpy array in addition to string with path to image
- bugfix: opencv-contrib-python version 3.*


0.5.0
------
- object_finder functions streamlined and "skeletonize" algorithm added
- better documentation with docstrings
- docstring integration with sphinx
- __init__ rework for sphinx integration


0.4.11
------
- first release to pypi
